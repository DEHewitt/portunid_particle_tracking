ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.37),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, label.vjust = 5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.37),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.37),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"),
legend.spacing.y = )unit(1, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.37),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"),
legend.spacing.y = unit(1, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.37),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"),
legend.spacing.y = unit(0.1, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.37),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.37),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"), legend.margin=unit(0, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.37),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"), legend.spacing = unit(0, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.35),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature\n(°C)", option="inferno") + scale_fill_viridis_c(name="Temperature\n(°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.33),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature (°C)", option="inferno") + scale_fill_viridis_c(name="Temperature (°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.115,0.33),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature (°C)", option="inferno") + scale_fill_viridis_c(name="Temperature (°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.125,0.33),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature (°C)", option="inferno") + scale_fill_viridis_c(name="Temperature (°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.15,0.33),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
u_files <- list.files("Aus/", pattern="Ocean_u*", full.names = T)
u_files <- list.files("Aus/", pattern="Ocean_u_", full.names = T)
setwd("C:/Users/htsch/Documents/GitHub/portunid_particle_tracking/BRAN_2020/")
library(tidyverse)
library(tidync)
library(lubridate)
library(metR)
u_files <- list.files("Aus/", pattern="Ocean_u_", full.names = T)
v_files <- list.files("Aus/", pattern="Ocean_v_", full.names = T)
temp_files <- list.files("Aus/", pattern="Ocean_temp_", full.names = T)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(country = 'australia',scale = "large", returnclass = "sf")
class(world)
#x <- ncmeta::nc_atts("AUS/Ocean_u_1994_01.nc", "Time")
#x$value[2]
for (i in 1:length(u_files)){
for (i in 1:length(u_files)){
for (i in (1:length(u_files)){
for (i in (1:length(u_files)){
for (i in (1:length(u_files))){
for i in (1:length(u_files)){
for (i in (1:length(u_files))) {
for (i in (1:length(u_files))) {
dat1 <- tidync(u_files[i]) %>% hyper_filter(st_ocean  = st_ocean  == 2.5) %>%
hyper_tibble() %>% mutate(Time = as.Date(Time, origin="1979-01-01"), Day = day(Time), Month = month(Time), Year=year(Time)) %>%
group_by(Month,xu_ocean ,yu_ocean ) %>% summarise(across(where(is.double),~ mean(.x, na.rm = TRUE))) %>%
filter(xu_ocean >143 & yu_ocean>-35)
#head(dat1)
#range(dat1$Time)
dat2 <- tidync(v_files[i]) %>% hyper_filter(st_ocean  = st_ocean  == 2.5) %>%
hyper_tibble() %>% mutate(Time = as.Date(Time, origin="1979-01-01"), Day = day(Time), Month = month(Time), Year=year(Time)) %>%
group_by(Month,xu_ocean ,yu_ocean ) %>% summarise(across(where(is.double),~ mean(.x, na.rm = TRUE))) %>%
filter(xu_ocean >143 & yu_ocean>-35)
#head(dat2)
dat3 <- tidync(temp_files[i]) %>% hyper_filter(st_ocean  = st_ocean  == 2.5) %>%
hyper_tibble() %>% mutate(Time = as.Date(Time, origin="1979-01-01"), Day = day(Time), Month = month(Time), Year=year(Time)) %>%
group_by(Month,xt_ocean ,yt_ocean ) %>% summarise(across(where(is.double),~ mean(.x, na.rm = TRUE))) %>%
filter(xt_ocean >143 & yt_ocean>-35)
#head(dat3)
#range(dat3$Time)
full_dat <- left_join(dat1, dat2)
#head(full_dat)
# ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
#   geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
#   geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
#                   mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
#   scale_mag() +coord_quickmap()+
#   scale_colour_viridis_c() + scale_fill_viridis_c()
# ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
### Load Australia
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature (°C)", option="inferno") + scale_fill_viridis_c(name="Temperature (°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.15,0.33),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave(paste0("Output/", full_dat$Month[1],"_",full_dat$Year[1],".pdf", units="cm", height=21, width=14.8)
}
length(u_files)
for (i in (1:length(u_files))) {
# BRAN Output plotting test
setwd("C:/Users/htsch/Documents/GitHub/portunid_particle_tracking/BRAN_2020/")
library(tidyverse)
library(tidync)
library(lubridate)
library(metR)
u_files <- list.files("Aus/", pattern="Ocean_u_", full.names = T)
v_files <- list.files("Aus/", pattern="Ocean_v_", full.names = T)
temp_files <- list.files("Aus/", pattern="Ocean_temp_", full.names = T)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(country = 'australia',scale = "large", returnclass = "sf")
class(world)
setwd("C:/Users/htsch/Documents/GitHub/portunid_particle_tracking/BRAN_2020/")
library(tidyverse)
library(tidync)
library(lubridate)
library(metR)
u_files <- list.files("Aus/", pattern="Ocean_u_", full.names = T)
v_files <- list.files("Aus/", pattern="Ocean_v_", full.names = T)
temp_files <- list.files("Aus/", pattern="Ocean_temp_", full.names = T)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(country = 'australia',scale = "large", returnclass = "sf")
class(world)
#x <- ncmeta::nc_atts("AUS/Ocean_u_1994_01.nc", "Time")
#x$value[2]
for (i in (1:length(u_files))) {
dat1 <- tidync(u_files[i]) %>% hyper_filter(st_ocean  = st_ocean  == 2.5) %>%
hyper_tibble() %>% mutate(Time = as.Date(Time, origin="1979-01-01"), Day = day(Time), Month = month(Time), Year=year(Time)) %>%
group_by(Month,xu_ocean ,yu_ocean ) %>% summarise(across(where(is.double),~ mean(.x, na.rm = TRUE))) %>%
filter(xu_ocean >143 & yu_ocean>-35)
#head(dat1)
#range(dat1$Time)
dat2 <- tidync(v_files[i]) %>% hyper_filter(st_ocean  = st_ocean  == 2.5) %>%
hyper_tibble() %>% mutate(Time = as.Date(Time, origin="1979-01-01"), Day = day(Time), Month = month(Time), Year=year(Time)) %>%
group_by(Month,xu_ocean ,yu_ocean ) %>% summarise(across(where(is.double),~ mean(.x, na.rm = TRUE))) %>%
filter(xu_ocean >143 & yu_ocean>-35)
#head(dat2)
dat3 <- tidync(temp_files[i]) %>% hyper_filter(st_ocean  = st_ocean  == 2.5) %>%
hyper_tibble() %>% mutate(Time = as.Date(Time, origin="1979-01-01"), Day = day(Time), Month = month(Time), Year=year(Time)) %>%
group_by(Month,xt_ocean ,yt_ocean ) %>% summarise(across(where(is.double),~ mean(.x, na.rm = TRUE))) %>%
filter(xt_ocean >143 & yt_ocean>-35)
#head(dat3)
#range(dat3$Time)
full_dat <- left_join(dat1, dat2)
#head(full_dat)
# ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
#   geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
#   geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
#                   mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
#   scale_mag() +coord_quickmap()+
#   scale_colour_viridis_c() + scale_fill_viridis_c()
# ggsave("Output/Test_map.pdf", units="cm", height=21, width=14.8)
### Load Australia
ggplot(full_dat, aes(x=xu_ocean, y=yu_ocean)) +
geom_tile(data=dat3, aes(x=xt_ocean, y=yt_ocean, col=temp, fill=temp))+
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_vector(aes(angle = atan2(dlat(v), dlon(u, yu_ocean))*180/pi,
mag = Mag(v, u)), skip = 3, pivot = 0.5, size=0.1) +
scale_mag(name="Velcocity\n(m/s)", max=1.5) +coord_sf(xlim = c(143, max(dat3$xt_ocean)), ylim = c(-35, -10), expand = FALSE)+
scale_colour_viridis_c(name="Temperature (°C)", option="inferno") + scale_fill_viridis_c(name="Temperature (°C)", option="inferno") +
labs(x="Longitude", y="Latitude")+ theme(axis.text = element_text(colour = "black", size=12),
axis.title = element_text(face="bold", size = 14),
legend.title = element_text(face="bold", size=12),
legend.position = c(0.15,0.33),
legend.text = element_text(size=10),
legend.background = element_blank(),
legend.key = element_blank(),
legend.key.height = unit(1.3, "cm"))+
guides(color = guide_colourbar(order = 2),
fill = guide_colourbar(order = 2),
mag = guide_vector(order=1, title.vjust = -5)) +
ggtitle(paste0(full_dat$Month[1],"/",full_dat$Year[1]))
ggsave(paste0("Output/", full_dat$Month[1],"_",full_dat$Year[1],".pdf"), units="cm", height=21, width=14.8)
}
library(tidyverse)
setwd("C:/Users/htsch/Documents/GitHub/portunid_particle_tracking/BRAN_2020/")
mydata <- readRDS("Output/spanner_forwards_master_settled.rds")
mydata$age <- mydata$age/86400
mydata$Year <- lubridate::year(mydata$rel_date)
mydata$Month <- lubridate::month(mydata$rel_date)
mydata <- mydata %>% mutate(spawning_year = case_when(Month < 6 ~ Year -1, # identifies year the spawning season begins
TRUE ~ Year)) %>%
filter(bathy <=200 & Month != 3) %>% filter(spawning_year != 2019)# %>% filter(Month != 1)
head(mydata)
hist(mydata$bathy)
range(mydata$lat)
table(mydata$Month)
table(mydata$age)
dat_sum1 <- mydata %>% group_by(spawning_year) %>% summarise(total = n())
ggplot(dat_sum1,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + geom_line(col="grey40")
table(mydata$Month)
dat_sum1 <- mydata %>% filter(Month ==11 | Month == 12) %>% group_by(spawning_year) %>% summarise(total = n())
ggplot(dat_sum1,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + geom_line(col="grey40")
dat_sum1 <- mydata %>% filter(Month == 12) %>% group_by(spawning_year) %>% summarise(total = n())
ggplot(dat_sum1,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + geom_line(col="grey40")
dat_sum1 <- mydata %>% filter(Month == 11) %>% group_by(spawning_year) %>% summarise(total = n())
ggplot(dat_sum1,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + geom_line(col="grey40")
dat_sum1 <- mydata %>% filter(Month >= 10 | Month <2) %>% group_by(spawning_year) %>% summarise(total = n())
ggplot(dat_sum1,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + geom_line(col="grey40")
dat_sum1 <- mydata %>% filter(Month >= 10 | Month <2) %>% group_by(spawning_year) %>% summarise(total = n())
ggplot(dat_sum1,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + geom_line(col="grey40")
dat_sum <- mydata %>%  filter(Month >= 10 | Month <2) %>% group_by(spawning_year, state) %>% summarise(total = n())
ggplot(dat_sum,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~state, scales = "free_y") + geom_line(col="grey40")
dat_sum3 <- mydata %>%  filter(Month >= 10 | Month <2) %>% group_by(spawning_year, ocean_zone) %>% summarise(total = n())
ggplot(dat_sum3,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~ocean_zone, scales = "free_y") + geom_line(col="grey40")
table(mydata$state)
table(mydata$ocean_zone)
NSW_dat <- mydata %>% filter(state=="NSW")
ggplot(NSW_dat, aes(lon, lat)) + geom_point()
ggplot(NSW_dat, aes(lon, lat)) + geom_point(alpha=0.5)
sub_dat <- mydata %>% group_by(ocean_zone) %>% sample_n(10000)
sub_dat <- mydata %>% group_by(ocean_zone) %>% sample_n(1000)
ggplot(sub_dat, aes(lon, lat, col=ocean_zone)) + geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) + geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_point(alpha=0.5)+
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
+coord_sf(xlim = c(143, 160)), ylim = c(-30, -10), expand = FALSE)+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(143, 160)), ylim = c(-30, -10), expand = FALSE)+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(143, 160)), ylim = c(-30, -10), expand = FALSE)+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(143, 160), ylim = c(-30, -10), expand = FALSE)+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(143, 160), ylim = c(-30, -20), expand = FALSE)+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(143, 160), ylim = c(-30, -20), expand = FALSE)+
scale_color_discrete(name="Release\nZone")
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(143, 160), ylim = c(-30, -20), expand = FALSE)+
scale_color_discrete(name="Release\nZone")+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(143, 160), ylim = c(-30, -23), expand = FALSE)+
scale_color_discrete(name="Release\nZone")+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(143, 160), ylim = c(-30, -22), expand = FALSE)+
scale_color_discrete(name="Release\nZone")+
geom_point(alpha=0.5)
ggplot(sub_dat, aes(lon, lat, col=as.factor(as.character(ocean_zone)))) +
geom_sf(data=world, col="grey70", fill = "grey80", inherit.aes = FALSE)+
coord_sf(xlim = c(147, 160), ylim = c(-30, -22), expand = FALSE)+
scale_color_discrete(name="Release\nZone")+
geom_point(alpha=0.5)
dat_sum <- mydata %>%  filter(Month >= 10 | Month <2) %>% group_by(spawning_year, state) %>% summarise(total = n())
ggplot(dat_sum,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~state, scales = "free_y") + geom_line(col="grey40")
dat_sum <- mydata %>%  filter(Month >= 10) %>% group_by(spawning_year, state) %>% summarise(total = n())
ggplot(dat_sum,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~state, scales = "free_y") + geom_line(col="grey40")
dat_sum <- mydata %>%  filter(Month >= 10 | Month <2) %>% group_by(spawning_year, state) %>% summarise(total = n())
ggplot(dat_sum,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~state, scales = "free_y") + geom_line(col="grey40")
range(mydata$Year)
range(mydata$spawning_year)
table(mydata$Year, mydata$Month)
table(mydata$spawning_year, mydata$Month)
dat_sum1 <- mydata %>% filter(Month >= 10 | Month <2) %>% group_by(spawning_year) %>% summarise(total = n())
ggplot(dat_sum1,aes(spawning_year, total)) + geom_point() + geom_smooth(method="lm") + geom_line(col="grey40")
